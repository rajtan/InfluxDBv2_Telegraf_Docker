## ------------------------------------------------------------------
##
## Input from MQTT messages
##

# Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]
  servers = ["tcp://192.168.1.85:1883"]
  topics = [
    "in.osl.ha254/+/+/binary_sensor/+/state",
    "in.osl.ha254/+/+/switch/+/state",
  ]

  tags = {input_src = "mqtt", bucket = "bkt_2w"}
  precision="1s"
  name_override = "iot"

  ## The message topic will be stored in a tag specified by this value.  If set
  ## to the empty string no topic tag will be created.
  # topic_tag = "topic"

  # qos = 0

  ## Connection timeout for initial connection in seconds
  # connection_timeout = "30s"
  # max_undelivered_messages = 1000
  # persistent_session = false
  ## If unset, a random client ID will be generated.
  # client_id = ""
  ## Username and password to connect MQTT server.
  username = "XXXXX"
  password = "XXXXXX"

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

  ##
  # client_trace = false
  ##

  data_format = "value"
  data_type="string"

  tagexclude = ["topic"]

  ## Enable extracting tag values from MQTT topics
   [[inputs.mqtt_consumer.topic_parsing]]
     topic = "in.osl.ha254/+/+/binary_sensor/+/state"
     # measurement = "measurement/_/_/_/_/_"
     tags = "mqtt_serv/dev_type/dev_no/_/dev_full_name/_"

   [[inputs.mqtt_consumer.topic_parsing]]
     topic = "in.osl.ha254/+/+/switch/+/state"
     # measurement = "measurement/_/_/_/_/_"
     tags = "mqtt_serv/dev_type/dev_no/_/dev_full_name/_"
     
  [inputs.mqtt_consumer.tagdrop]
   dev_full_name = ["oh81_a006_so_relay", "oh81_a006_so_button", "oh81_a006_button"]

